apiVersion: v1
data:
  postgresql.sh: "#!/usr/bin/env sh\n\n# Create backup directories if not exists\nfor
    dir in mnt tmp; do \n  if [ ! -d \"/$dir/$POSTGRESQL_BACKUP_DIR\" ]; then\n     mkdir
    /$dir/$POSTGRESQL_BACKUP_DIR\n  fi\ndone  \n\n# Performing backup\nPGPASSWORD=\"$POSTGRESQL_PASSWORD\"
    pg_dump -h $POSTGRESQL_SERVICE_NAME \\\n\t-p $POSTGRESQL_SERVICE_PORT -U $POSTGRESQL_USERNAME
    $POSTGRESQL_DB_NAME --clean \\\n       \t> /tmp/\"$POSTGRESQL_BACKUP_DIR\"/postgresql-$(date
    +%Y%m%d).sql\n\n# Archicing the backup directory and copying the backup to persistent
    volume\ncd /tmp && tar cvf postgresql-$(date +%Y%m%d-%H-%M).tar \"$POSTGRESQL_BACKUP_DIR\"\ncp
    postgresql-*.tar /mnt/$POSTGRESQL_BACKUP_DIR/\n\n# Send the backup to external
    backup server if needed \nif [ \"$REMOTE_BACKUP\" = \"true\" ]; then\n        scp
    -o StrictHostKeyChecking=no -P $REMOTE_SERVER_PORT -i $KEY_PATH /tmp/postgresql-*.tar
    \\\n       \t$REMOTE_USER@$REMOTE_HOST:$REMOTE_DIR\nfi\n\n# Delete the temp directory\nrm
    -rf postgresql-*.tar /tmp/\"$POSTGRESQL_BACKUP_DIR\"/\n\n# Cleanup the old backup\nfind
    /mnt -mindepth 1 -mtime +$BACKUP_TIME -delete\n"
kind: ConfigMap
metadata:
  name: backup-script
