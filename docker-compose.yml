version: "3.4"
services:
  dumper:
    build: .
    volume:
      - ./backup:/mnt
    environment:
      # for backup all databases set this env by true, else it will backup only one database.
      - BACKUP_ALL=true
      - VOLUME_DIR=/mnt
      # Postgres databass
      - POSTGRESQL_PASSWORD=password123
      - POSTGRESQL_SERVICE_NAME=postgresql
      - POSTGRESQL_SERVICE_PORT=5432
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_DB_NAME=postgres
      - POSTGRESQL_BACKUP_DIR=post
      # cronjob pattern
      - POSTGRESQL_CRON_PATTERN=* 2 * * *
      # Clean the old local backups older than this value.
      - BACKUP_TIME=7
      # Choose either s3 or ssh and then configure the required envs
      - REMOTE_BACKUP=s3
      # AWS s3 env variables
      - AWS_ACCESS_KEY_ID=xxxxxx
      - AWS_SECRET_ACCESS_KEY=xxxxxxxxxx
      - AWS_DEFAULT_REGION=us-east-1
      - BUCKET_NAME=test-backup-bucket
      # SSH env variables
      - REMOTE_HOST=10.107.148.24
      - REMOTE_DIR=/home/ddd
      - REMOTE_SERVER_PORT=22
      - REMOTE_USER=user 
      - KEY_PATH=/tmp/ssh/key
  postgresql:
    image: docker.io/bitnami/postgresql:11
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=password123
      - POSTGRESQL_DATABASE=postgres
